// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheApp.Api.Model;

namespace TheApp.Api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190520195446_adedTables")]
    partial class adedTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TheApp.Api.Entities.CleaningDate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<int>("UserID");

                    b.HasKey("Id");

                    b.HasIndex("UserID");

                    b.ToTable("CleaningDates");
                });

            modelBuilder.Entity("TheApp.Api.Entities.Community", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<DateTime>("Established");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Communities");
                });

            modelBuilder.Entity("TheApp.Api.Entities.DBUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Firstname");

                    b.Property<string>("Lastname");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TheApp.Api.Entities.ShoppingItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateofEntry");

                    b.Property<bool>("IsBought");

                    b.Property<string>("Item");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ShoppingItems");
                });

            modelBuilder.Entity("TheApp.Api.Entities.UsersInCommunities", b =>
                {
                    b.Property<int>("CommunityId");

                    b.Property<int>("UserID");

                    b.Property<DateTime>("JoinDate");

                    b.HasKey("CommunityId", "UserID");

                    b.HasIndex("UserID");

                    b.ToTable("UsersInCommunities");
                });

            modelBuilder.Entity("TheApp.Api.Entities.VisitorDate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<int>("UserId");

                    b.Property<string>("Visitor");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("VisitorDates");
                });

            modelBuilder.Entity("TheApp.Api.Entities.CleaningDate", b =>
                {
                    b.HasOne("TheApp.Api.Entities.DBUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TheApp.Api.Entities.ShoppingItem", b =>
                {
                    b.HasOne("TheApp.Api.Entities.DBUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TheApp.Api.Entities.UsersInCommunities", b =>
                {
                    b.HasOne("TheApp.Api.Entities.Community", "Community")
                        .WithMany()
                        .HasForeignKey("CommunityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TheApp.Api.Entities.DBUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TheApp.Api.Entities.VisitorDate", b =>
                {
                    b.HasOne("TheApp.Api.Entities.DBUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
